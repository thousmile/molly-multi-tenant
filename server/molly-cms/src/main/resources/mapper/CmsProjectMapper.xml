<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xaaef.molly.corems.mapper.CmsProjectMapper">


    <resultMap id="BaseResultMap" type="CmsProject">
        <id property="projectId" column="project_id"/>
        <result property="projectName" column="project_name"/>
        <result property="linkman" column="linkman"/>
        <result property="contactNumber" column="contact_number"/>
        <result property="areaCode" column="area_code"/>
        <result property="address" column="address"/>
        <result property="sort" column="sort"/>
        <result property="deptId" column="dept_id"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="createUser" column="create_user"/>
        <result property="lastUpdateTime" column="last_update_time"/>
        <result property="lastUpdateUser" column="last_update_user"/>
    </resultMap>


    <select id="selectListTableNamesByNotIncludeColumn" resultType="java.lang.String">
        SELECT *
        FROM (SELECT DISTINCT TABLE_NAME
              FROM information_schema.COLUMNS
              WHERE TABLE_SCHEMA = (SELECT DATABASE())) AS allTableName
        WHERE allTableName.TABLE_NAME NOT IN (SELECT DISTINCT TABLE_NAME
                                              FROM information_schema.COLUMNS
                                              WHERE TABLE_SCHEMA = (SELECT DATABASE())
                                                AND COLUMN_NAME = #{column})
    </select>


    <select id="selectListTableNamesByIncludeColumn" resultType="java.lang.String">
        SELECT DISTINCT TABLE_NAME
        FROM information_schema.COLUMNS
        WHERE TABLE_SCHEMA = (SELECT DATABASE())
          AND COLUMN_NAME = #{column}
    </select>


    <delete id="deleteByProjectId">
        <foreach collection='tableName' item='item' index='index'>
            DELETE FROM ${item} WHERE `project_id` = #{projectId};
        </foreach>
    </delete>


    <resultMap id="tenantAndProjectMap" type="com.xaaef.molly.corems.entity.TenantAndProject">
        <id property="projectId" column="project_id"/>
        <result property="tenantId" column="tenant_id"/>
    </resultMap>


    <select id="selectListByTenantDbName" resultMap="tenantAndProjectMap">
        <foreach collection="tenantDbNameList" item="item" separator="union">
            SELECT project_id, #{item} AS tenant_id FROM ${item}.cms_project
        </foreach>
    </select>


    <sql id="DataScopeWhere">
        <where>
            <if test="p.projectId != null and p.projectId != 0">
                AND pro.project_id = #{p.projectId}
            </if>
            <if test="p.status != null">
                AND pro.`status` = #{p.status}
            </if>
            <if test="p.projectName != null and p.projectName !=''">
                AND CONCAT(pro.project_name, pro.linkman, pro.contactNumber, pro.address) LIKE
                CONCAT('%',#{p.projectName},'%')
            </if>
            <if test="p.deptId != null and p.deptId != 0">
                AND (pro.dept_id = #{p.deptId} OR pro.dept_id IN ( SELECT t.dept_id FROM pms_dept t WHERE
                find_in_set(#{p.deptId}, ancestors) ))
            </if>
            <!-- 数据范围过滤 -->
            ${p.params.dataScope}
        </where>
    </sql>


    <select id="selectProjectList" resultMap="BaseResultMap">
        select pro.* from cms_project as pro
        left join pms_dept as d on pro.dept_id = d.dept_id
        <include refid="DataScopeWhere"/>
    </select>


    <select id="selectProjectPage" resultMap="BaseResultMap">
        select pro.* from cms_project as pro
        left join pms_dept as d on pro.dept_id = d.dept_id
        <include refid="DataScopeWhere"/>
        order by pro.sort,pro.create_time
    </select>


    <select id="selectSimpleProjectPage" resultMap="BaseResultMap">
        select pro.project_id, pro.project_name, pro.linkman, pro.area_code, pro.address from cms_project as pro
        left join pms_dept as d on pro.dept_id = d.dept_id
        <include refid="DataScopeWhere"/>
        order by pro.sort,pro.create_time
    </select>


</mapper>
